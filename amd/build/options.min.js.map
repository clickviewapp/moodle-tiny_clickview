{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Tiny ClickView Video Options helper.\n *\n * @module      tiny_clickview/options\n * @copyright   2023 ClickView Pty. Limited <info@clickview.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\n// Helper variables for the option names.\nconst iframe = getPluginOptionName(pluginName, 'iframe');\nconst eventsApi = getPluginOptionName(pluginName, 'eventsApi');\n\n/**\n * Options registration function.\n *\n * @param {tinyMCE} editor\n */\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    // For each option, register it with the editor.\n    registerOption(iframe, {\n        processor: 'string',\n    });\n    registerOption(eventsApi, {\n        processor: 'string',\n    });\n};\n\n/**\n * Fetch the iframe value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {object} The value of the iframe option\n */\nexport const getIframe = (editor) => editor.options.get(iframe);\n\n/**\n * Fetch the eventsApi value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {object} The value of the eventsApi option\n */\nexport const getEventsApi = (editor) => editor.options.get(eventsApi);\n"],"names":["iframe","pluginName","eventsApi","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;MA2BMA,QAAS,gCAAoBC,mBAAY,UACzCC,WAAY,gCAAoBD,mBAAY,+BAOzBE,eACfC,eAAiBD,OAAOE,QAAQC,SAGtCF,eAAeJ,OAAQ,CACnBO,UAAW,WAEfH,eAAeF,UAAW,CACtBK,UAAW,+BAUOJ,QAAWA,OAAOE,QAAQG,IAAIR,8BAQ3BG,QAAWA,OAAOE,QAAQG,IAAIN"}